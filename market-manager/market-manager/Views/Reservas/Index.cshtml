@model market_manager.Utils.PaginatedList<market_manager.Models.Reservas>
@using Microsoft.AspNetCore.Identity
@inject UserManager<Utilizadores> UserManager

@{
    ViewData["Title"] = "Reservas";
    var user = await UserManager.GetUserAsync(User);
    var isGestor = await UserManager.IsInRoleAsync(user, "Gestor");
}

<h1>@ViewData["Title"]</h1>
        <a asp-action="Create" class="btn btn-primary">Adicionar Reserva</a>

<form asp-action="Index" method="get">
    <div class="row">
        <div class="col-md-6">
            <div class="input-group">
                <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" class="form-control" placeholder="Search by name..." />
                <button type="submit" class="btn btn-primary">Search</button>
            </div>
        </div>
    </div>
    <div class="form-group">
        <label for="estadoBanca">Estado Banca:</label>
        <select name="estadoBanca" id="estadoBanca" class="form-control">
            <option value="">All</option>
            @foreach (var estado in Enum.GetValues(typeof(Bancas.EstadoBanca)))
            {
                <option value="@estado" selected="@(ViewData["EstadoBanca"]?.Equals(estado) ?? false)">@estado</option>
            }
        </select>
    </div>
    <button type="submit" class="btn btn-primary">Filter</button>
</form>


<table class="table table-striped">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    Data Início
                </a>
            </th>
            <th>Data Fim</th>
            @if (isGestor)
            {
                <th>Utilizador</th>
            }
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["StateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    Estado
                </a>
            </th>
            <th>Bancas</th>
            <th>Ações</th>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in Model) {
            string rowClass = "";
            if (item.EstadoActualReserva == Reservas.EstadoReserva.Aprovada)
            {
                rowClass = "table-success";
            }
            else if (item.EstadoActualReserva == Reservas.EstadoReserva.Pendente)
            {
                rowClass = "table-primary";
            }
            else if (item.EstadoActualReserva == Reservas.EstadoReserva.Recusada)
            {
                rowClass = "table-danger";
            }
            else if (item.EstadoActualReserva == Reservas.EstadoReserva.Concluida)
            {
                rowClass = "table-warning";
            }
            <tr class="@rowClass">
            <td>@Html.DisplayFor(modelItem => item.DataInicio)</td>
            <td>@Html.DisplayFor(modelItem => item.DataFim)</td>
            @if (isGestor)
            {
                <td>@Html.DisplayFor(modelItem => item.Utilizador.NomeCompleto)</td>
            }
                <td>@Html.DisplayFor(modelItem => item.EstadoActualReserva)</td>
                <td>
                    @string.Join(", ", item.ListaBancas.Select(b => b.NomeIdentificadorBanca))
                </td>
                <td>
                    <div class="btn-group" role="group">
                        <a asp-action="Details" asp-route-id="@item.ReservaId" class="btn btn-sm btn-outline-info">Detalhes</a>
                        @if (isGestor || item.UtilizadorId == user.Id)
                        {
                            <a asp-action="Edit" asp-route-id="@item.ReservaId" class="btn btn-sm btn-outline-primary">Editar</a>
                            <a asp-action="Delete" asp-route-id="@item.ReservaId" class="btn btn-sm btn-outline-danger">Apagar</a>
                        }
                        @if (isGestor)
                        {
                            <div class="btn-group" role="group">
                                <button type="button" class="btn btn-sm btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    Mudar Estado
                                </button>
                                <div class="dropdown-menu">
                                    @foreach (var state in Enum.GetValues(typeof(Reservas.EstadoReserva)))
                                    {
                                        <form asp-action="ChangeState" asp-route-id="@item.ReservaId" asp-route-newState="@state" method="post" style="display: inline;">
                                            <button type="submit" class="dropdown-item">@state</button>
                                        </form>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<nav aria-label="Page navigation">
    <ul class="pagination">
        <li class="page-item @prevDisabled">
            <a asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(Model.PageIndex - 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="page-link">
                Previous
            </a>
        </li>
        <li class="page-item @nextDisabled">
            <a asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@(Model.PageIndex + 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="page-link">
                Next
            </a>
        </li>
    </ul>
</nav>