@model market_manager.Models.Bancas
@using Microsoft.AspNetCore.Identity
@inject UserManager<Utilizadores> UserManager

@{
    ViewData["Title"] = "Detalhes da Banca";
    var user = await UserManager.GetUserAsync(User);
    var isVendedor = await UserManager.IsInRoleAsync(user, "Vendedor");
}

<nav class="navbar navbar-top">
    <div class="container-fluid">
        <a asp-action="Index" class="btn btn-secondary">Voltar</a>
    </div>
</nav>

<h1>@ViewData["Title"]</h1>

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}

<div class="row">
    <div class="col-md-6">
        <div class="card bg-dark text-white">
            <div class="card-body">
                <div class="col-md-6">
                    <h5 class="card-title">@Html.DisplayFor(model => model.NomeIdentificadorBanca)</h5>
                    <p class="card-text"><strong>Categoria:</strong> @Html.DisplayFor(model => model.CategoriaBanca)</p>
                    <p class="card-text"><strong>Estado:</strong> @Html.DisplayFor(model => model.EstadoAtualBanca)</p>
                    <p class="card-text"><strong>Localização:</strong> (@Html.DisplayFor(model => model.LocalizacaoX), @Html.DisplayFor(model => model.LocalizacaoY))</p>
                    <p class="card-text"><strong>Dimensões:</strong> @Html.DisplayFor(model => model.Largura) m x @Html.DisplayFor(model => model.Comprimento) m</p>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <h5>Fotografia da Banca</h5>
            @if (!string.IsNullOrEmpty(Model.FotografiaBanca))
            {
                <a href="#" class="banca-image-link" data-bs-toggle="modal" data-bs-target="#imageModal" data-image-url="@Url.Content($"~/FotosBancas/{Model.FotografiaBanca}")">
                    <img src="@Url.Content($"~/FotosBancas/{Model.FotografiaBanca}")" alt="Foto da Banca" class="img-fluid" />
                </a>
            }
            else
            {
                <p>Sem fotografia.</p>
            }
        </div>
    </div>

    <div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content">
                <div class="modal-body">
                    <img id="fullscreenImage" src="" alt="Fullscreen Banca Image" class="img-fluid">
                </div>
            </div>
        </div>
    </div>

    <div class="mt-4">
        <h4>Reservas Associadas</h4>
        @await Html.PartialAsync("_ReservasPartial", Model.Reservas)
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const imageModal = document.getElementById('imageModal');
            const fullscreenImage = document.getElementById('fullscreenImage');

            imageModal.addEventListener('show.bs.modal', function (event) {
                const imageLink = event.relatedTarget;
                const imageUrl = imageLink.getAttribute('data-image-url');
                fullscreenImage.setAttribute('src', imageUrl);
            });
        });
    </script>
}