@model market_manager.Models.Bancas
@using Microsoft.AspNetCore.Identity
@inject UserManager<Utilizadores> UserManager
@{
    ViewData["Title"] = "Bancas";
    var user = await UserManager.GetUserAsync(User);
    var isVendedor = await UserManager.IsInRoleAsync(user, "Vendedor");
}

<h1>Detalhes</h1>

<div>
    <h4>Bancas</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.NomeIdentificadorBanca)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.NomeIdentificadorBanca)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CategoriaBanca)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CategoriaBanca)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Largura)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Largura)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Comprimento)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Comprimento)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.LocalizacaoX)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.LocalizacaoX)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.LocalizacaoY)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.LocalizacaoY)
        </dd>
        <dt class = "col-sm-2">

            @Html.DisplayNameFor(model => model.EstadoAtualBanca)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.EstadoAtualBanca)

        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FotografiaBanca)
        </dt>
        <dd class="col-sm-10">
            <img src="~/FotosBancas/@Html.DisplayFor(model => model.FotografiaBanca)"
                 alt="Fotografia da Banca @Html.DisplayFor(model => model.NomeIdentificadorBanca)"
                 title="@Html.DisplayFor(model => model.NomeIdentificadorBanca)"
                 width="100px" />
            <div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="imageModalLabel">Banca Image</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <img id="fullscreenImage" src="" alt="Fullscreen Banca Image" class="img-fluid">
                        </div>
                    </div>
                </div>
            </div>

            <script>
                document.addEventListener('DOMContentLoaded', function () {
                    const imageLinks = document.querySelectorAll('.banca-image-link');
                    const fullscreenImage = document.getElementById('fullscreenImage');

                    imageLinks.forEach(link => {
                        link.addEventListener('click', function (event) {
                            event.preventDefault();
                            const imageSrc = this.querySelector('img').getAttribute('src');
                            fullscreenImage.setAttribute('src', imageSrc);
                        });
                    });
                });
            </script>
        </dd>
    </dl>
</div>
<div>
    @if (!isVendedor)
    {
        <a asp-action="Edit" asp-route-id="@Model?.BancaId">Editar</a>
    }
    <a asp-action="Index">Voltar à Lista</a>
</div>
